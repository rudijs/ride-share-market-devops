upstream rsm_app_upstream {
    server rsm-app:3000;
}

server {
    listen 443 ssl default_server;

    server_name ridesharemarket.com vbox.ridesharemarket.com;

    access_log /var/log/nginx/access-rsm-app.log logstash_json;

    error_log /var/log/nginx/error-rsm-app.log;

    gzip on;
    etag on;
    gzip_proxied any;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    location ~* \.(ico|css|js|gif|jpe?g|png)$ {
        expires    24h;
        add_header Cache-Control private;
        root /srv/ride-share-market-app/dist;
        try_files $uri @rsm_app;
    }

    location / {
        root /srv/ride-share-market-app/dist;
        try_files $uri @rsm_app;
    }

    location @rsm_app {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://rsm_app_upstream;
    }

    ssl on;
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_certificate /etc/nginx/ssl/ridesharemarket.com.crt;
    ssl_certificate_key /etc/nginx/ssl/ridesharemarket.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    # TODO: when start ssl cert is ready update this.
    # https://blog.kempkens.io/posts/ocsp-stapling-with-nginx/
    #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

}

# Redirect non-SSL to SSL.
server {
    listen      80 default_server;
    server_name ridesharemarket.com www.ridesharemarket.com;
    return      301 https://ridesharemarket.com$request_uri;
}

# Redirect SSL 'www.' to domain name only.
server {
    listen      443 ssl;
    server_name www.ridesharemarket.com;
    return      301 https://ridesharemarket.com$request_uri;
}
